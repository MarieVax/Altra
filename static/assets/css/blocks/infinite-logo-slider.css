@charset "UTF-8";
.block-infinite-logo-slider {
  --gap: 1rem;
  --speed: 30s;
  position: relative;
  display: flex;
  overflow: hidden;
  user-select: none;
  gap: var(--gap);
  -webkit-mask-image: linear-gradient(var(--mask-direction, to right), hsla(0, 0%, 0%, 0), hsl(0, 0%, 0%) 20%, hsl(0, 0%, 0%) 80%, hsla(0, 0%, 0%, 0));
  mask-image: linear-gradient(var(--mask-direction, to right), hsla(0, 0%, 0%, 0), hsl(0, 0%, 0%) 20%, hsl(0, 0%, 0%) 80%, hsla(0, 0%, 0%, 0));
}

.block-infinite-logo-slider__content {
  flex-shrink: 0;
  display: flex;
  justify-content: space-around;
  gap: var(--gap);
  min-width: 100%;
}

@keyframes scroll {
  from {
    transform: translateX(0);
  }
  to {
    transform: translateX(calc(-100% - var(--gap)));
  }
}
/* Pause animation when reduced-motion is set */
@media (prefers-reduced-motion: reduce) {
  .block-infinite-logo-slider__content {
    animation-play-state: paused !important;
  }
}
/* Enable animation */
.block-infinite-logo-slider--enable-animation .block-infinite-logo-slider__content {
  animation: scroll var(--speed) linear infinite;
}

/* Reverse animation */
.block-infinite-logo-slider--reverse .block-infinite-logo-slider__content {
  animation-direction: reverse;
}

/* Pause on hover */
.block-infinite-logo-slider--hover-pause:hover .block-infinite-logo-slider__content {
  animation-play-state: paused;
}

/* Attempt to size parent based on content. Keep in mind that the parent width is equal to both content containers that stretch to fill the parent. */
.block-infinite-logo-slider--fit-content {
  max-width: fit-content;
}

/* A fit-content sizing fix: Absolute position the duplicate container. This will set the size of the parent wrapper to a single child container. Shout out to Olavi's article that had this solution üëè @link: https://olavihaapala.fi/2021/02/23/modern-marquee.html  */
.block-infinite-logo-slider--pos-absolute .block-infinite-logo-slider__content:last-child {
  position: absolute;
  top: 0;
  left: 0;
}

/* Enable position absolute animation on the duplicate content (last-child) */
.block-infinite-logo-slider--enable-animation .block-infinite-logo-slider--pos-absolute .block-infinite-logo-slider__content:last-child {
  animation-name: scroll-abs;
}

@keyframes scroll-abs {
  from {
    transform: translateX(calc(100% + var(--gap)));
  }
  to {
    transform: translateX(0);
  }
}
/* Other page demo styles */
.block-infinite-logo-slider__item {
  flex: 0 0 auto;
  display: flex;
  align-items: center;
  margin: 2px;
  padding: 1rem 1.375rem;
  border-radius: 0.25rem;
  text-align: center;
  max-width: 200px;
}
.block-infinite-logo-slider__item img {
  max-height: 100px;
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
